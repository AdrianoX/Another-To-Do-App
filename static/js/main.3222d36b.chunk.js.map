{"version":3,"sources":["components/AddTask.js","components/Task.js","components/TaskList.js","components/App.js","reportWebVitals.js","index.js"],"names":["AddTask","minDate","Date","toISOString","slice","state","text","checked","date","handleText","e","setState","target","value","handleCheckbox","handleDate","handleClick","length","props","add","alert","maxDate","this","className","type","placeholder","onChange","id","htmlFor","min","max","onClick","Component","Task","task","active","important","finishDate","style","color","change","delete","finish","toLocaleString","TaskList","tasks","filter","done","sort","a","b","toLowerCase","activeTasks","map","doneTasks","fontSize","App","counter","deleteTask","console","log","changeTaskStatus","forEach","getTime","addTask","prevState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3222d36b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./AddTask.css\";\r\n\r\nclass AddTask extends Component {\r\n  minDate = new Date().toISOString().slice(0, 10);\r\n  state = {\r\n    text: \"\",\r\n    checked: false,\r\n    date: this.minDate,\r\n  };\r\n\r\n  handleText = (e) => {\r\n    this.setState({\r\n      text: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleCheckbox = (e) => {\r\n    this.setState({\r\n      checked: e.target.checked,\r\n    });\r\n  };\r\n\r\n  handleDate = (e) => {\r\n    this.setState({\r\n      date: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleClick = () => {\r\n    const { text, checked, date } = this.state;\r\n    if (text.length > 2) {\r\n      const add = this.props.add(text, date, checked);\r\n      if (add) {\r\n        this.setState({\r\n          text: \"\",\r\n          checked: false,\r\n          date: this.minDate,\r\n        });\r\n      }\r\n    } else {\r\n      alert(\"Name to short !\");\r\n    }\r\n  };\r\n  render() {\r\n    let maxDate = this.minDate.slice(0, 4) * 1 + 1;\r\n    maxDate = maxDate + \"-12-31\";\r\n    return (\r\n      <div className=\"form\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add Task ...\"\r\n          value={this.state.text}\r\n          onChange={this.handleText}\r\n        />\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={this.state.checked}\r\n          id=\"important\"\r\n          onChange={this.handleCheckbox}\r\n        />\r\n        <label htmlFor=\"important\">Priority</label>\r\n        <br />\r\n        <label htmlFor=\"date\">Until when</label>\r\n\r\n        <input\r\n          type=\"date\"\r\n          value={this.state.date}\r\n          min={this.minDate}\r\n          max={maxDate}\r\n          onChange={this.handleDate}\r\n        />\r\n        <br />\r\n        <button onClick={this.handleClick}>Add</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTask;\r\n","import React from \"react\";\r\n\r\nconst Task = (props) => {\r\n  const style = {\r\n    color: \"red\",\r\n  };\r\n\r\n  const { text, date, id, active, important, finishDate } = props.task;\r\n\r\n  if (active) {\r\n    return (\r\n      <div>\r\n        <p>\r\n          <strong style={important ? style : null}>{text}</strong> - do{\" \"}\r\n          <span>{date} </span>\r\n          <button onClick={() => props.change(id)}>Finally Done !</button>\r\n          <button onClick={() => props.delete(id)}>X</button>\r\n        </p>\r\n      </div>\r\n    );\r\n  } else {\r\n    const finish = new Date(finishDate).toLocaleString();\r\n    return (\r\n      <div>\r\n        <p>\r\n          <strong>{text}</strong>\r\n          <em> Complete the task to {date})</em>\r\n          <br />- confirmation of execution <span> {finish}</span>\r\n          <button onClick={() => props.delete(id)}>X</button>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default Task;\r\n","import React from \"react\";\r\nimport Task from \"./Task\";\r\n\r\nconst TaskList = (props) => {\r\n  const active = props.tasks.filter((task) => task.active === true);\r\n  const done = props.tasks.filter((task) => task.active === false);\r\n\r\n  //   done.sort((a, b) => b.finishDate - a.finishDate);\r\n\r\n  if (done.length >= 2) {\r\n    done.sort((a, b) => {\r\n      if (a.finishDate > b.finishDate) {\r\n        return -1;\r\n      }\r\n      if (a.finishDate < b.finishDate) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  if (active.length >= 2) {\r\n    active.sort((a, b) => {\r\n      a = a.text.toLowerCase();\r\n      b = b.text.toLowerCase();\r\n\r\n      if (a < b) return -1;\r\n      if (a > b) return 1;\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  const activeTasks = active.map((task) => (\r\n    <Task\r\n      key={task.id}\r\n      task={task}\r\n      delete={props.delete}\r\n      change={props.change}\r\n    />\r\n  ));\r\n\r\n  const doneTasks = done.map((task) => (\r\n    <Task\r\n      key={task.id}\r\n      task={task}\r\n      delete={props.delete}\r\n      change={props.change}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <div className=\"active\">\r\n        <h1> Task's List</h1>\r\n        {activeTasks.length > 0 ? activeTasks : <p>No more tasks ! : )</p>}\r\n      </div>\r\n\r\n      <hr />\r\n      <div className=\"done\">\r\n        <h3>\r\n          {\" \"}\r\n          Done Task's <em>({done.length})</em>\r\n        </h3>\r\n        {done.length > 3 && (\r\n          <span style={{ fontSize: 12 }}>Only last 3 tasks display !</span>\r\n        )}\r\n        {doneTasks.slice(0, 3)}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n<div>Task's List</div>;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport AddTask from \"./AddTask\";\nimport TaskList from \"./TaskList\";\n\nclass App extends Component {\n  counter = 5;\n\n  state = {\n    tasks: [\n      {\n        id: 0,\n        text: \"Play D2 Resurrected : )\",\n        date: \"2021-05-17\",\n        important: true,\n        active: true,\n        finishDate: null,\n      },\n      {\n        id: 1,\n        text: \"React Redux + Router training : ]\",\n        date: \"2021-05-25\",\n        important: true,\n        active: true,\n        finishDate: null,\n      },\n      {\n        id: 2,\n        text: \"Watch Winter Soldier & Falcon last episode\",\n        date: \"2021-05-29\",\n        important: true,\n        active: true,\n        finishDate: null,\n      },\n      {\n        id: 3,\n        text: \"Finally go to the gym... : D\",\n        date: \"2021-06-11\",\n        important: true,\n        active: true,\n        finishDate: null,\n      },\n      {\n        id: 4,\n        text: \"Nicola birthsdasy present ! \",\n        date: \"2021-06-15\",\n        important: true,\n        active: true,\n        finishDate: null,\n      },\n    ],\n  };\n\n  deleteTask = (id) => {\n    console.log(\"delete elements id -> \" + id);\n    // const tasks = [...this.state.tasks];\n    // const index = tasks.findIndex((task) => task.id === id);\n    // tasks.splice(index, 1);\n    // this.setState({\n    //   tasks,\n    // });\n\n    let tasks = [...this.state.tasks];\n    tasks = tasks.filter((task) => task.id !== id);\n    this.setState({\n      tasks,\n    });\n  };\n\n  changeTaskStatus = (id) => {\n    console.log(\"change in state elements id ->  \" + id);\n    const tasks = [...this.state.tasks]; // let tasks = Array.from(this.state.tasks)\n    tasks.forEach((task) => {\n      if (task.id === id) {\n        task.active = false;\n        task.finishDate = new Date().getTime();\n      }\n    });\n\n    this.setState({\n      tasks,\n    });\n  };\n\n  addTask = (text, date, important) => {\n    const task = {\n      id: this.counter,\n      text,\n      date,\n      important,\n      active: true,\n      finishDate: null,\n    };\n    this.counter++;\n    this.setState((prevState) => ({\n      tasks: [...prevState.tasks, task],\n    }));\n\n    return true;\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>TO DO APP : )</h1>\n        <AddTask add={this.addTask} />\n        <TaskList\n          tasks={this.state.tasks}\n          delete={this.deleteTask}\n          change={this.changeTaskStatus}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}